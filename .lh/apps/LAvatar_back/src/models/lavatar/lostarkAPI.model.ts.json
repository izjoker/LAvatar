{
    "sourceFile": "apps/LAvatar_back/src/models/lavatar/lostarkAPI.model.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 33,
            "patches": [
                {
                    "date": 1676018306079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1676018347979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n-const fs = require('fs');\n-const axios = require('axios');\n-const partsMap = require('../../../assets/constants/avatarPartsIdMap.json');\n-const classIdMap = require('../../../assets/constants/classIdMap.json');\n-const exceptionMap = require('./../../../assets/constants/stringIdExceptionMap.json');\n+import fs from 'fs';\n+import axios from 'axios';\n+import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n+import classIdMap from '../../../assets/constants/classIdMap.json';\n+import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n \n function sleep(ms:number) {\n"
                },
                {
                    "date": 1676018377092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n-import classIdMap from '../../../assets/constants/classIdMap.json';\n+import classIdMap from 'assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n \n"
                },
                {
                    "date": 1676018399888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n-import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n-import classIdMap from 'assets/constants/classIdMap.json';\n+import partsMap from 'assets/constants/avatarPartsIdMap.json';\n+import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n \n"
                },
                {
                    "date": 1676018673184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import fs from 'fs';\n import axios from 'axios';\n-import partsMap from 'assets/constants/avatarPartsIdMap.json';\n+import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n"
                },
                {
                    "date": 1676019138890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import fs from 'fs';\n import axios from 'axios';\n+console.log();\n import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n"
                },
                {
                    "date": 1676019477929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n console.log();\n-import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n+import partsMap from '~/assets/constants/avatarPartsIdMap.json';\n import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n@@ -12,22 +12,22 @@\n }\n const normalizeWhitespaces = (str) => {\n     return str.replace(/\\xA0/g, ' ').trim();\n };\n-const getStringId = (id_num:number, itemName:string) => {\n-    if (Object.keys(exceptionMap).includes(id_num.toString())) {\n-        return itemName + '_' + exceptionMap[id_num];\n+const getStringId = (idNum:number, itemName:string) => {\n+    if (Object.keys(exceptionMap).includes(idNum.toString())) {\n+        return itemName + '_' + exceptionMap[idNum];\n     }\n \n     let suffix = '';\n-    if (300000000 <= id_num && id_num <= 399999999) {\n-        let classIdentifier = id_num.toString().substr(2, 2);\n+    if (300000000 <= idNum && idNum <= 399999999) {\n+        let classIdentifier = idNum.toString().substr(2, 2);\n         /* 예외처리: 우마르의역작 */\n-        if ('00021' === id_num.toString().substr(4, 5)) {\n+        if ('00021' === idNum.toString().substr(4, 5)) {\n             classIdentifier = classIdentifier[0]+'0';\n         }\n \n-        const partsIdentifier = id_num.toString()[1];\n+        const partsIdentifier = idNum.toString()[1];\n         const className = classIdMap[classIdentifier];\n         const partsName = partsMap[partsIdentifier];\n         suffix = '_' + className;\n     }\n@@ -109,9 +109,9 @@\n \n             if (acc[stringId] === undefined) {\n                 acc[stringId] = {\n                     'id': stringId,\n-                    'id_num': v['Id'],\n+                    'idNum': v['Id'],\n                     'name': itemName,\n                     'icon': v['Icon'],\n                     'grade': v['Grade'],\n                 };\n"
                },
                {
                    "date": 1676019494541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n console.log();\n-import partsMap from '~/assets/constants/avatarPartsIdMap.json';\n+import partsMap from './assets/constants/avatarPartsIdMap.json';\n import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n"
                },
                {
                    "date": 1676019502960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n console.log();\n-import partsMap from './assets/constants/avatarPartsIdMap.json';\n+import partsMap from '/assets/constants/avatarPartsIdMap.json';\n import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n"
                },
                {
                    "date": 1676019516579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n console.log();\n-import partsMap from '/assets/constants/avatarPartsIdMap.json';\n+import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n"
                },
                {
                    "date": 1676019646499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n console.log();\n-import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n+import partsMap from './../../../assets/constants/avatarPartsIdMap.json' assert { type: 'json' };\n import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n"
                },
                {
                    "date": 1676019663544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n console.log();\n-import partsMap from './../../../assets/constants/avatarPartsIdMap.json' assert { type: 'json' };\n+import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n import classIdMap from './../../../assets/constants/classIdMap.json';\n import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n import config from './../../utils/config';\n \n"
                },
                {
                    "date": 1676019964164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,14 @@\n import fs from 'fs';\n import axios from 'axios';\n console.log();\n-import partsMap from './../../../assets/constants/avatarPartsIdMap.json';\n-import classIdMap from './../../../assets/constants/classIdMap.json';\n-import exceptionMap from './../../../assets/constants/stringIdExceptionMap.json';\n+const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n+const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n import config from './../../utils/config';\n \n \n+const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n+\n function sleep(ms:number) {\n     return new Promise((resolve) => setTimeout(resolve, ms));\n }\n const normalizeWhitespaces = (str) => {\n"
                },
                {
                    "date": 1676019971056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,9 @@\n import fs from 'fs';\n import axios from 'axios';\n-console.log();\n+import config from './../../utils/config';\n const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n-import config from './../../utils/config';\n-\n-\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n     return new Promise((resolve) => setTimeout(resolve, ms));\n"
                },
                {
                    "date": 1676020011989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n-const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n+const classIdMap = JSON.parse(fs.readFileSync('/assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n"
                },
                {
                    "date": 1676020019457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n const classIdMap = JSON.parse(fs.readFileSync('/assets/constants/classIdMap.json', 'utf-8'));\n-const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n-const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n+const exceptionMap = JSON.parse(fs.readFileSync('/assets/constants/stringIdExceptionMap.json', 'utf-8'));\n+const partsMap = JSON.parse(fs.readFileSync('/assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n     return new Promise((resolve) => setTimeout(resolve, ms));\n }\n"
                },
                {
                    "date": 1676020037814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n-const classIdMap = JSON.parse(fs.readFileSync('/assets/constants/classIdMap.json', 'utf-8'));\n-const exceptionMap = JSON.parse(fs.readFileSync('/assets/constants/stringIdExceptionMap.json', 'utf-8'));\n-const partsMap = JSON.parse(fs.readFileSync('/assets/constants/avatarPartsIdMap.json', 'utf-8'));\n+const classIdMap = JSON.parse(fs.readFileSync('~/assets/constants/classIdMap.json', 'utf-8'));\n+const exceptionMap = JSON.parse(fs.readFileSync('~/assets/constants/stringIdExceptionMap.json', 'utf-8'));\n+const partsMap = JSON.parse(fs.readFileSync('~/assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n     return new Promise((resolve) => setTimeout(resolve, ms));\n }\n"
                },
                {
                    "date": 1676020053611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n+console.log();\n const classIdMap = JSON.parse(fs.readFileSync('~/assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('~/assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('~/assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676020085176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n-console.log();\n+console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n+console.log(process.cwd());\n const classIdMap = JSON.parse(fs.readFileSync('~/assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('~/assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('~/assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676020172416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n-console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n-console.log(process.cwd());\n-const classIdMap = JSON.parse(fs.readFileSync('~/assets/constants/classIdMap.json', 'utf-8'));\n-const exceptionMap = JSON.parse(fs.readFileSync('~/assets/constants/stringIdExceptionMap.json', 'utf-8'));\n-const partsMap = JSON.parse(fs.readFileSync('~/assets/constants/avatarPartsIdMap.json', 'utf-8'));\n+// console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n+// console.log(process.cwd());\n+const classIdMap = JSON.parse(fs.readFileSync('/assets/constants/classIdMap.json', 'utf-8'));\n+const exceptionMap = JSON.parse(fs.readFileSync('/assets/constants/stringIdExceptionMap.json', 'utf-8'));\n+const partsMap = JSON.parse(fs.readFileSync('/assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n     return new Promise((resolve) => setTimeout(resolve, ms));\n }\n"
                },
                {
                    "date": 1676020208696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,11 @@\n import axios from 'axios';\n import config from './../../utils/config';\n // console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n // console.log(process.cwd());\n-const classIdMap = JSON.parse(fs.readFileSync('/assets/constants/classIdMap.json', 'utf-8'));\n-const exceptionMap = JSON.parse(fs.readFileSync('/assets/constants/stringIdExceptionMap.json', 'utf-8'));\n-const partsMap = JSON.parse(fs.readFileSync('/assets/constants/avatarPartsIdMap.json', 'utf-8'));\n+const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n+const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n+const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n     return new Promise((resolve) => setTimeout(resolve, ms));\n }\n"
                },
                {
                    "date": 1676082650796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,14 +19,9 @@\n     }\n \n     let suffix = '';\n     if (300000000 <= idNum && idNum <= 399999999) {\n-        let classIdentifier = idNum.toString().substr(2, 2);\n-        /* 예외처리: 우마르의역작 */\n-        if ('00021' === idNum.toString().substr(4, 5)) {\n-            classIdentifier = classIdentifier[0]+'0';\n-        }\n-\n+        const classIdentifier = idNum.toString().substr(2, 2);\n         const partsIdentifier = idNum.toString()[1];\n         const className = classIdMap[classIdentifier];\n         const partsName = partsMap[partsIdentifier];\n         suffix = '_' + className;\n"
                },
                {
                    "date": 1676082671295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n-// console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n-// console.log(process.cwd());\n+console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n+console.log(process.cwd());\n const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676082703510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import axios from 'axios';\n import config from './../../utils/config';\n console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n console.log(process.cwd());\n-const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n+const classIdMap = JSON.parse(fs.readFileSync('/assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n"
                },
                {
                    "date": 1676082781996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import axios from 'axios';\n import config from './../../utils/config';\n console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n console.log(process.cwd());\n-const classIdMap = JSON.parse(fs.readFileSync('/assets/constants/classIdMap.json', 'utf-8'));\n+const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n"
                },
                {
                    "date": 1676082796852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import axios from 'axios';\n import config from './../../utils/config';\n console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n console.log(process.cwd());\n+console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676083517606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n import axios from 'axios';\n import config from './../../utils/config';\n console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n console.log(process.cwd());\n-console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n+// console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n+console.log(resolve('./../../../assets/constants/classIdMap.json'));\n const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676083547533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n+import {resolve} from 'path';\n console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n console.log(process.cwd());\n // console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n console.log(resolve('./../../../assets/constants/classIdMap.json'));\n"
                },
                {
                    "date": 1676083580848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import {resolve} from 'path';\n console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n console.log(process.cwd());\n // console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n-console.log(resolve('./../../../assets/constants/classIdMap.json'));\n+console.log(resolve('./../../assets/constants/classIdMap.json'));\n const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676083619431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n console.log(process.cwd());\n // console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n console.log(resolve('./../../assets/constants/classIdMap.json'));\n+console.log(resolve('.assets/constants/classIdMap.json'));\n const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676083635525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n console.log(process.cwd());\n // console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n console.log(resolve('./../../assets/constants/classIdMap.json'));\n-console.log(resolve('.assets/constants/classIdMap.json'));\n+console.log(resolve('assets/constants/classIdMap.json'));\n const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676083660737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,11 @@\n console.log(process.cwd());\n // console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n console.log(resolve('./../../assets/constants/classIdMap.json'));\n console.log(resolve('assets/constants/classIdMap.json'));\n-const classIdMap = JSON.parse(fs.readFileSync('./../../../assets/constants/classIdMap.json', 'utf-8'));\n-const exceptionMap = JSON.parse(fs.readFileSync('./../../../assets/constants/stringIdExceptionMap.json', 'utf-8'));\n-const partsMap = JSON.parse(fs.readFileSync('./../../../assets/constants/avatarPartsIdMap.json', 'utf-8'));\n+const classIdMap = JSON.parse(fs.readFileSync('assets/constants/classIdMap.json', 'utf-8'));\n+const exceptionMap = JSON.parse(fs.readFileSync('assets/constants/stringIdExceptionMap.json', 'utf-8'));\n+const partsMap = JSON.parse(fs.readFileSync('assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n function sleep(ms:number) {\n     return new Promise((resolve) => setTimeout(resolve, ms));\n }\n"
                },
                {
                    "date": 1676083669803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,7 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n-import {resolve} from 'path';\n-console.log('debugging@@@@@@@@@@@@@@@@@@@22');\n-console.log(process.cwd());\n-// console.log(__dirname+'./../../../assets/constants/classIdMap.json');\n-console.log(resolve('./../../assets/constants/classIdMap.json'));\n-console.log(resolve('assets/constants/classIdMap.json'));\n const classIdMap = JSON.parse(fs.readFileSync('assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                },
                {
                    "date": 1676083675344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import fs from 'fs';\n import axios from 'axios';\n import config from './../../utils/config';\n+\n const classIdMap = JSON.parse(fs.readFileSync('assets/constants/classIdMap.json', 'utf-8'));\n const exceptionMap = JSON.parse(fs.readFileSync('assets/constants/stringIdExceptionMap.json', 'utf-8'));\n const partsMap = JSON.parse(fs.readFileSync('assets/constants/avatarPartsIdMap.json', 'utf-8'));\n \n"
                }
            ],
            "date": 1676018306079,
            "name": "Commit-0",
            "content": "const fs = require('fs');\nconst axios = require('axios');\nconst partsMap = require('../../../assets/constants/avatarPartsIdMap.json');\nconst classIdMap = require('../../../assets/constants/classIdMap.json');\nconst exceptionMap = require('./../../../assets/constants/stringIdExceptionMap.json');\nimport config from './../../utils/config';\n\n\nfunction sleep(ms:number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nconst normalizeWhitespaces = (str) => {\n    return str.replace(/\\xA0/g, ' ').trim();\n};\nconst getStringId = (id_num:number, itemName:string) => {\n    if (Object.keys(exceptionMap).includes(id_num.toString())) {\n        return itemName + '_' + exceptionMap[id_num];\n    }\n\n    let suffix = '';\n    if (300000000 <= id_num && id_num <= 399999999) {\n        let classIdentifier = id_num.toString().substr(2, 2);\n        /* 예외처리: 우마르의역작 */\n        if ('00021' === id_num.toString().substr(4, 5)) {\n            classIdentifier = classIdentifier[0]+'0';\n        }\n\n        const partsIdentifier = id_num.toString()[1];\n        const className = classIdMap[classIdentifier];\n        const partsName = partsMap[partsIdentifier];\n        suffix = '_' + className;\n    }\n    return itemName + suffix;\n};\n\nexport default class LostarkAPI {\n    authToken: string;\n    reqCount: number;\n\n    constructor() {\n        this.authToken = config.get('lostarkAPI.authentication.keys')[0];\n        this.reqCount = 0;\n    }\n    async reqController() {\n        this.reqCount++;\n        if (this.reqCount > 95) {\n            await sleep(60000);\n            this.reqCount = 0;\n        }\n    }\n    async getMarketItemList(categoryCode, pageNum) {\n        let r = {};\n        const url = 'https://developer-lostark.game.onstove.com/markets/items';\n        const body = {\n            'Sort': 'GRADE',\n            'CategoryCode': categoryCode,\n            'ItemGrade': null,\n            'ItemName': null,\n            'PageNo': pageNum,\n            'SortCondition': 'ASC',\n        };\n        try {\n            const resp = await axios.post(url, body, {\n                headers: {\n                    authorization: `bearer ${this.authToken}`,\n                },\n            });\n\n            r = resp.data;\n        } catch (e) {\n            if (e.response.statusCode === 429) {\n                console.log('Reached Request Limitation.');\n            } else if (e.hasOwnProperty('response')) {\n                console.log('error with response', e.response.status, e.response.statusCode, JSON.stringify(e.response.data, null, 4));\n            } else {\n                console.log('error without response', e);\n            }\n            r = {};\n        }\n        return r;\n    }\n\n    async getBulkMarketItemList(categoryCodes) {\n        let data = [];\n        // let count = 0\n        for (const code of categoryCodes) {\n            let page = 1;\n\n            while (true) {\n                await this.reqController();\n                const lastResp = await this.getMarketItemList(code, page);\n                data = data.concat(lastResp['Items']);\n                if (lastResp['Items'].length === 0) {\n                    break;\n                } else {\n                    page++;\n                }\n            }\n        }\n\n        return data;\n    }\n\n    async digestMarketItemList(marketItemListResp) {\n        return marketItemListResp.reduce((acc, v) => {\n            const itemName = normalizeWhitespaces(v['Name']);\n            const stringId = getStringId(v['Id'], itemName);\n\n            if (acc[stringId] === undefined) {\n                acc[stringId] = {\n                    'id': stringId,\n                    'id_num': v['Id'],\n                    'name': itemName,\n                    'icon': v['Icon'],\n                    'grade': v['Grade'],\n                };\n            }\n            if (v['TradeRemainCount'] === null) {\n                acc[stringId]['TradeCount'] = false;\n                acc[stringId]['CurrentMinPrice'] = v['CurrentMinPrice'];\n                acc[stringId]['yDayAvgPrice'] = v['YDayAvgPrice'];\n            } else {\n                acc[stringId]['TradeCount'] = true;\n                for (let i = 0; i < 4; i++) {\n                    if (i === v['TradeRemainCount']) {\n                        acc[stringId][`CurrentMinPrice_${i}`] = v['CurrentMinPrice'];\n                        acc[stringId][`yDayAvgPrice_${i}`] = v['YDayAvgPrice'];\n                    }\n                }\n            }\n            return acc;\n        }, {});\n    }\n\n    async getItemPriceData() {\n        /*\n            주요 아이템 카테고리 코드\n            아바타(상자포함, 무기, 악기포함): 20000\n            펫(상자포함): 140000\n            탈것(상자포함): 160000\n        */\n        console.log('Getting Price Datas.');\n        const categoryCodes = [160000, 140000, 20000];\n        const lists = await this.getBulkMarketItemList(categoryCodes);\n        const digested = await this.digestMarketItemList(lists);\n        console.log('Price Datas Received.');\n\n        return digested;\n    }\n}\n\n\n"
        }
    ]
}