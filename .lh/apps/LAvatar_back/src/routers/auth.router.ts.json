{
    "sourceFile": "apps/LAvatar_back/src/routers/auth.router.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1675959713675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1675959719828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n             .select('+password')\n             .select('+permissions');\n         if (user) {\n             let isPasswordCorrect = await user.comparePassword(req.body.password);\n-            if (isPasswordCorrect) {\n+            if (isP1asswordCorrect) {\n                 res.json({ token: user.createAuthToken(req.query.withPermissions) });\n                 return;\n             } else {\n                 throw ERR(400, 'password is not correct');\n"
                },
                {
                    "date": 1675999442814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n             .select('+password')\n             .select('+permissions');\n         if (user) {\n             let isPasswordCorrect = await user.comparePassword(req.body.password);\n-            if (isP1asswordCorrect) {\n+            if (isPasswordCorrect) {\n                 res.json({ token: user.createAuthToken(req.query.withPermissions) });\n                 return;\n             } else {\n                 throw ERR(400, 'password is not correct');\n"
                },
                {
                    "date": 1675999475890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,23 @@\n-import express, {Request, RequestHandler, Response } from 'express'\n-import asyncHandler from 'express-async-handler'\n-import ERR from 'http-errors'\n-import DB from '../models/lavatar/index'\n-import { UserDocument, UserModel } from '../models/lavatar/User.model';\n+import express, {Request, RequestHandler, Response} from 'express';\n+import asyncHandler from 'express-async-handler';\n+import ERR from 'http-errors';\n+import DB from '../models/lavatar/index';\n+import {UserDocument, UserModel} from '../models/lavatar/User.model';\n \n-const User = DB.model('User') as UserModel;\n+const User = DB.model('User');\n const router = express.Router();\n \n router.post(\n     '/',\n-    asyncHandler(async function (req, res) {\n-        const user = await User.findOne({ email: req.body.email })\n+    asyncHandler(async function(req, res) {\n+        const user = await User.findOne({email: req.body.email})\n             .select('+password')\n             .select('+permissions');\n         if (user) {\n-            let isPasswordCorrect = await user.comparePassword(req.body.password);\n+            const isPasswordCorrect = await user.comparePassword(req.body.password);\n             if (isPasswordCorrect) {\n-                res.json({ token: user.createAuthToken(req.query.withPermissions) });\n+                res.json({token: user.createAuthToken(req.query.withPermissions)});\n                 return;\n             } else {\n                 throw ERR(400, 'password is not correct');\n             }\n@@ -28,9 +28,9 @@\n );\n \n router.post(\n     '/token',\n-    asyncHandler(async function (req, res) {\n+    asyncHandler(async function(req, res) {\n         res.json(await User.getUser(req.body.email, req.body.password));\n     }),\n );\n\\ No newline at end of file\n-export default router;\n+export default router;\n"
                },
                {
                    "date": 1675999484018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,23 @@\n-import express, {Request, RequestHandler, Response} from 'express';\n-import asyncHandler from 'express-async-handler';\n-import ERR from 'http-errors';\n-import DB from '../models/lavatar/index';\n-import {UserDocument, UserModel} from '../models/lavatar/User.model';\n+import express, {Request, RequestHandler, Response } from 'express'\n+import asyncHandler from 'express-async-handler'\n+import ERR from 'http-errors'\n+import DB from '../models/lavatar/index'\n+import { UserDocument, UserModel } from '../models/lavatar/User.model';\n \n-const User = DB.model('User');\n+const User = DB.model('User') as UserModel;\n const router = express.Router();\n \n router.post(\n     '/',\n-    asyncHandler(async function(req, res) {\n-        const user = await User.findOne({email: req.body.email})\n+    asyncHandler(async function (req, res) {\n+        const user = await User.findOne({ email: req.body.email })\n             .select('+password')\n             .select('+permissions');\n         if (user) {\n-            const isPasswordCorrect = await user.comparePassword(req.body.password);\n+            let isPasswordCorrect = await user.comparePassword(req.body.password);\n             if (isPasswordCorrect) {\n-                res.json({token: user.createAuthToken(req.query.withPermissions)});\n+                res.json({ token: user.createAuthToken(req.query.withPermissions) });\n                 return;\n             } else {\n                 throw ERR(400, 'password is not correct');\n             }\n@@ -28,9 +28,9 @@\n );\n \n router.post(\n     '/token',\n-    asyncHandler(async function(req, res) {\n+    asyncHandler(async function (req, res) {\n         res.json(await User.getUser(req.body.email, req.body.password));\n     }),\n );\n export default router;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1676018215259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,23 @@\n-import express, {Request, RequestHandler, Response } from 'express'\n-import asyncHandler from 'express-async-handler'\n-import ERR from 'http-errors'\n-import DB from '../models/lavatar/index'\n-import { UserDocument, UserModel } from '../models/lavatar/User.model';\n+import express, {Request, RequestHandler, Response} from 'express';\n+import asyncHandler from 'express-async-handler';\n+import ERR from 'http-errors';\n+import DB from '../models/lavatar/index';\n+import {UserDocument, UserModel} from '../models/lavatar/User.model';\n \n const User = DB.model('User') as UserModel;\n const router = express.Router();\n \n router.post(\n     '/',\n-    asyncHandler(async function (req, res) {\n-        const user = await User.findOne({ email: req.body.email })\n+    asyncHandler(async function(req, res) {\n+        const user = await User.findOne({email: req.body.email})\n             .select('+password')\n             .select('+permissions');\n         if (user) {\n-            let isPasswordCorrect = await user.comparePassword(req.body.password);\n+            const isPasswordCorrect = await user.comparePassword(req.body.password);\n             if (isPasswordCorrect) {\n-                res.json({ token: user.createAuthToken(req.query.withPermissions) });\n+                res.json({token: user.createAuthToken(req.query.withPermissions)});\n                 return;\n             } else {\n                 throw ERR(400, 'password is not correct');\n             }\n@@ -28,9 +28,9 @@\n );\n \n router.post(\n     '/token',\n-    asyncHandler(async function (req, res) {\n+    asyncHandler(async function(req, res) {\n         res.json(await User.getUser(req.body.email, req.body.password));\n     }),\n );\n\\ No newline at end of file\n-export default router;\n+export default router;\n"
                }
            ],
            "date": 1675959713675,
            "name": "Commit-0",
            "content": "import express, {Request, RequestHandler, Response } from 'express'\nimport asyncHandler from 'express-async-handler'\nimport ERR from 'http-errors'\nimport DB from '../models/lavatar/index'\nimport { UserDocument, UserModel } from '../models/lavatar/User.model';\n\nconst User = DB.model('User') as UserModel;\nconst router = express.Router();\n\nrouter.post(\n    '/',\n    asyncHandler(async function (req, res) {\n        const user = await User.findOne({ email: req.body.email })\n            .select('+password')\n            .select('+permissions');\n        if (user) {\n            let isPasswordCorrect = await user.comparePassword(req.body.password);\n            if (isPasswordCorrect) {\n                res.json({ token: user.createAuthToken(req.query.withPermissions) });\n                return;\n            } else {\n                throw ERR(400, 'password is not correct');\n            }\n        } else {\n            throw ERR(404, 'user is not exist');\n        }\n    }),\n);\n\nrouter.post(\n    '/token',\n    asyncHandler(async function (req, res) {\n        res.json(await User.getUser(req.body.email, req.body.password));\n    }),\n);\nexport default router;"
        }
    ]
}