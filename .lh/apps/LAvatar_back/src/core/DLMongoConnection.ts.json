{
    "sourceFile": "apps/LAvatar_back/src/core/DLMongoConnection.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1676085063716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1676085063716,
            "name": "Commit-0",
            "content": "\nimport _ from 'lodash';\nimport mongoose, {Connection, ConnectOptions} from 'mongoose';\nimport logger from '../utils/logger';\nimport config from '../utils/config';\n\n\nconst mongoConfig = config.get('databases.mongodb.lavatar');\nlet dailyMongoConnection: Connection;\nconst url = _.get(mongoConfig, 'url');\n\nconst opt: ConnectOptions = mongoConfig.config || {};\n\n\nif (url) {\n    logger.debug('Connect to mongo url: ' + url);\n    dailyMongoConnection = mongoose.createConnection(_.get(mongoConfig, 'url'), opt);\n} else {\n    logger.debug('mongo url is not provided use configuration instead');\n    const mongoHostname = _.get(mongoConfig, 'hostname');\n    const mongoDatabase = _.get(mongoConfig, 'database');\n    const mongoUser = _.get(mongoConfig, 'user');\n    const mongoPass = _.get(mongoConfig, 'pass');\n    const mongoURL = `mongodb://${mongoHostname}`;\n    const opt: ConnectOptions = {..._.get(mongoConfig, 'opts')};\n\n    if (mongoUser && mongoPass) {\n        opt.user = mongoUser;\n        opt.pass = mongoPass;\n        opt.dbName = mongoDatabase;\n        logger.debug(\n            `Connection to mongo url with options\\nurl: ${mongoURL}\\noptions: ${JSON.stringify(opt, null, 4)}`,\n        );\n        dailyMongoConnection = mongoose.createConnection(mongoURL, opt);\n    } else {\n        logger.debug('Connection to mongo url with no authentication\\n' + `${mongoURL}/${mongoDatabase}`);\n        dailyMongoConnection = mongoose.createConnection(`${mongoURL}/${mongoDatabase}`);\n    }\n}\n\ndailyMongoConnection.asPromise().then((connection) => {\n    logger.info(`Mongo connection has been created: [${JSON.stringify(connection.host)}]`);\n});\n\nexport default dailyMongoConnection;\n"
        }
    ]
}