{
    "sourceFile": "apps/LAvatar_front/src/components/avatarpage/packageitems/ItemCard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1675991739859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1675991776976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,10 @@\n const printIcon = (itemSpec) => {\n     let backgroundImage = ''\n     if (itemSpec['grade']) {\n         switch (itemSpec['grade']) {\n-            case default:\n+            default:\n+                backgroundImage = ''\n             case '일반':\n                 backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n                 break\n             case '고급':\n"
                },
                {
                    "date": 1675991791888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,10 @@\n     let backgroundImage = ''\n     if (itemSpec['grade']) {\n         switch (itemSpec['grade']) {\n             default:\n-                backgroundImage = ''\n+                backgroundImage = \n+                backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n             case '일반':\n                 backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n                 break\n             case '고급':\n"
                },
                {
                    "date": 1675991798978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,8 @@\n     let backgroundImage = ''\n     if (itemSpec['grade']) {\n         switch (itemSpec['grade']) {\n             default:\n-                backgroundImage = \n                 backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n             case '일반':\n                 backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n                 break\n"
                },
                {
                    "date": 1675991810005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,10 @@\n     let backgroundImage = ''\n     if (itemSpec['grade']) {\n         switch (itemSpec['grade']) {\n             default:\n-                backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n+                backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\";\n+                break\n             case '일반':\n                 backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n                 break\n             case '고급':\n"
                },
                {
                    "date": 1675991852475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,6 +162,6 @@\n         border: 'solid',\n         borderWidth: '1px',\n     }\n \n-    return <img key='itemImage' style={style} src={itemSpec['icon'] ? itemSpec['icon'] : '/image/noStock.png'} alt=\"no image\"/>\n+    return <img key='itemImage' style={style} src={itemSpec['icon'] ? itemSpec['icon'] : '/image/noStock.png'} alt=\"\"/>\n     }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1675997186315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n import Box from '@mui/material/Box';\n import Popper from '@mui/material/Popper';\n-import { useState } from 'react';\n+import {useState} from 'react';\n \n-function ItemCard({ itemSpec, id }) {\n-\n+function ItemCard({itemSpec, id}) {\n     const [anchorEl, setAnchorEl] = useState(null);\n \n     const handlePopoverOpen = (event) => {\n         setAnchorEl(event.currentTarget);\n@@ -16,23 +15,22 @@\n \n     const open = Boolean(anchorEl);\n \n     const displayItemPrice = (itemSpec) => {\n-        let r = 0\n-        if (\"CurrentMinPrice\" in itemSpec) {\n-            r = itemSpec[\"CurrentMinPrice\"];\n-        }\n-        else if (itemSpec[\"TradeCount\"] && \"CurrentMinPrice_3\" in\n+        let r = 0;\n+        if ('CurrentMinPrice' in itemSpec) {\n+            r = itemSpec['CurrentMinPrice'];\n+        } else if (itemSpec['TradeCount'] && 'CurrentMinPrice_3' in\n             itemSpec) {\n-            r = itemSpec[\"CurrentMinPrice_3\"];\n-        } else if (itemSpec[\"TradeCount\"]) {\n+            r = itemSpec['CurrentMinPrice_3'];\n+        } else if (itemSpec['TradeCount']) {\n             r = '*';\n         } else {\n-            r = \"S/O\"\n+            r = 'S/O';\n         }\n \n-        return r.toLocaleString(\"en-US\");\n-    }\n+        return r.toLocaleString('en-US');\n+    };\n     return (\n         <div className=\"ItemCard\" id={id}>\n             <div\n                 aria-owns={open ? 'mouse-over-popover' : undefined}\n@@ -40,128 +38,126 @@\n                 onMouseEnter={handlePopoverOpen}\n                 onMouseLeave={handlePopoverClose}\n             >\n                 {/* <span className='ItemIcon'>{printIcon(itemSpec)}</span> */}\n-                <span className='DisplayItemName' style={{ marginRight: '5px', }}>{itemSpec['name']}</span>\n+                <span className='DisplayItemName' style={{marginRight: '5px'}}>{itemSpec['name']}</span>\n                 <span className='DisplayItemPrice' style={\n                     {\n-                        width: \"100%\",\n+                        width: '100%',\n                         textAlign: 'right',\n                         fontWeight: 'bold',\n                         color: 'rgb(150, 130, 0)',\n                     }\n                 }>\n                     {displayItemPrice(itemSpec)}\n                 </span>\n             </div>\n-            <Popper open={open} anchorEl={anchorEl} onClose={handlePopoverClose} style={{maxWidth: \"550px\", fontSize:'small'}}>\n-                <Box sx={{ border: 1, p: 1, bgcolor: 'background.paper' }}>\n-                    <PopperContents \n-     style={{ overflow: 'hidden'}} itemSpec={itemSpec} />\n+            <Popper open={open} anchorEl={anchorEl} onClose={handlePopoverClose} style={{maxWidth: '550px', fontSize: 'small'}}>\n+                <Box sx={{border: 1, p: 1, bgcolor: 'background.paper'}}>\n+                    <PopperContents\n+                        style={{overflow: 'hidden'}} itemSpec={itemSpec} />\n                 </Box>\n             </Popper>\n         </div>\n-    )\n+    );\n }\n-export default ItemCard\n+export default ItemCard;\n \n-function PopperContents({ itemSpec }) {\n-    let r = []\n+function PopperContents({itemSpec}) {\n+    const r = [];\n     function displayWholePrices(itemSpec) {\n-        let priceLst = []\n+        const priceLst = [];\n         for (let i = 0; i <= 3; i++) {\n             try {\n-                priceLst.push(itemSpec[`CurrentMinPrice_${i}`].toString())\n-\n+                priceLst.push(itemSpec[`CurrentMinPrice_${i}`].toString());\n             } catch {\n-                priceLst.push('S/O')\n+                priceLst.push('S/O');\n             }\n         }\n         return <div key=\"prices\">\n             {priceLst.map((price, idx) =>\n                 <div key={`${itemSpec['id']}_${idx}`}>{idx}회 거래 가능: <span className=\"DisplayItemPrice\">{price}</span></div>\n             )}\n-        </div>\n+        </div>;\n     }\n \n-    r.push(printIcon(itemSpec))\n+    r.push(printIcon(itemSpec));\n     if (itemSpec['type'].split('-')[0] === 'avatar' || itemSpec['type'] === 'weapon' || itemSpec['type'] === 'instrument') {\n-        r.push(<div key=\"targetClass\" style={{ color: 'red' }}>\n+        r.push(<div key=\"targetClass\" style={{color: 'red'}}>\n             <span className=\"TargetClass\">{itemSpec['target'][0]}</span>\n             <span> 사용 가능</span>\n \n-        </div>)\n+        </div>);\n         if (itemSpec['TradeCount'] === true) {\n-            let contents = <div key=\"prices\">{displayWholePrices(itemSpec)}</div>\n-            r.push(contents)\n+            const contents = <div key=\"prices\">{displayWholePrices(itemSpec)}</div>;\n+            r.push(contents);\n         } else if (itemSpec['TradeCount'] === undefined) {\n-            let contents = <div key=\"prices\">{\"재고없음\"}</div>\n-            r.push(contents)\n+            const contents = <div key=\"prices\">{'재고없음'}</div>;\n+            r.push(contents);\n         } else {\n-            let contents = <div key=\"prices\">{\"거래횟수 무제한\"}</div>\n-            r.push(contents)\n+            const contents = <div key=\"prices\">{'거래횟수 무제한'}</div>;\n+            r.push(contents);\n         }\n-    }else {\n-        function stringifyTargetLst(target){\n-            let r = \"\"\n-            \n-            if (target.length !== 0){\n-                for (let className of target){\n-                    \n-                    r = r+className+\", \"\n+    } else {\n+        function stringifyTargetLst(target) {\n+            let r = '';\n+\n+            if (target.length !== 0) {\n+                for (const className of target) {\n+                    r = r+className+', ';\n                 }\n                 r = r.slice(0, -2) + ' 사용 가능';\n             }\n-            return r\n+            return r;\n         }\n-        r.push(<div key=\"targetClass\" style={{ color: 'red' }}>\n+        r.push(<div key=\"targetClass\" style={{color: 'red'}}>\n             <span className=\"TargetClass\">{\n                 stringifyTargetLst(itemSpec['target'])\n             }</span>\n \n-        </div>)\n-        \n+        </div>);\n+\n         if (itemSpec['TradeCount'] !== undefined) {\n-            let contents = <div key=\"prices\">{\"거래횟수 무제한\"}</div>\n-            r.push(contents)\n+            const contents = <div key=\"prices\">{'거래횟수 무제한'}</div>;\n+            r.push(contents);\n         } else {\n-            let contents = <div key=\"prices\">{\"재고없음\"}</div>\n-            r.push(contents)\n+            const contents = <div key=\"prices\">{'재고없음'}</div>;\n+            r.push(contents);\n         }\n\\ No newline at end of file\n     }\n-    return r\n+    return r;\n }\n \n const printIcon = (itemSpec) => {\n-    let backgroundImage = ''\n+    let backgroundImage = '';\n     if (itemSpec['grade']) {\n         switch (itemSpec['grade']) {\n-            default:\n-                backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\";\n-                break\n-            case '일반':\n-                backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n-                break\n-            case '고급':\n-                backgroundImage = \"linear-gradient(135deg, rgb(17, 39, 57), rgb(17, 61, 93))\"\n-                break\n-            case '희귀':\n-                backgroundImage = \"linear-gradient(135deg, rgb(17, 39, 57), rgb(17, 61, 93))\" \n-                break\n-            case '영웅':\n-                backgroundImage = \"linear-gradient(135deg, rgb(46, 18, 60), rgb(72, 13, 93))\"\n-                break\n-            case '전설':\n-                backgroundImage = \"linear-gradient(135deg, rgb(69, 43, 6), rgb(158, 95, 4))\"\n-                break\n+        default:\n+            backgroundImage = 'linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))';\n+            break;\n+        case '일반':\n+            backgroundImage = 'linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))';\n+            break;\n+        case '고급':\n+            backgroundImage = 'linear-gradient(135deg, rgb(17, 39, 57), rgb(17, 61, 93))';\n+            break;\n+        case '희귀':\n+            backgroundImage = 'linear-gradient(135deg, rgb(17, 39, 57), rgb(17, 61, 93))';\n+            break;\n+        case '영웅':\n+            backgroundImage = 'linear-gradient(135deg, rgb(46, 18, 60), rgb(72, 13, 93))';\n+            break;\n+        case '전설':\n+            backgroundImage = 'linear-gradient(135deg, rgb(69, 43, 6), rgb(158, 95, 4))';\n+            break;\n         }\n     }\n-    let style = {\n-        height: \"48px\",\n-        width: \"48px\",\n+    const style = {\n+        height: '48px',\n+        width: '48px',\n         backgroundImage: backgroundImage,\n         border: 'solid',\n         borderWidth: '1px',\n-    }\n+    };\n \n-    return <img key='itemImage' style={style} src={itemSpec['icon'] ? itemSpec['icon'] : '/image/noStock.png'} alt=\"\"/>\n-    }\n+    return <img key='itemImage' style={style} src={itemSpec['icon'] ? itemSpec['icon'] : '/image/noStock.png'} alt=\"\"/>;\n+};\n"
                },
                {
                    "date": 1675997281132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import Box from '@mui/material/Box';\n import Popper from '@mui/material/Popper';\n import {useState} from 'react';\n \n+// eslint-disable-next-line require-jsdoc\n function ItemCard({itemSpec, id}) {\n     const [anchorEl, setAnchorEl] = useState(null);\n \n     const handlePopoverOpen = (event) => {\n@@ -159,5 +160,5 @@\n         borderWidth: '1px',\n     };\n \n     return <img key='itemImage' style={style} src={itemSpec['icon'] ? itemSpec['icon'] : '/image/noStock.png'} alt=\"\"/>;\n-};\n\\ No newline at end of file\n+};\n"
                },
                {
                    "date": 1675997392138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,11 @@\n                 onMouseEnter={handlePopoverOpen}\n                 onMouseLeave={handlePopoverClose}\n             >\n                 {/* <span className='ItemIcon'>{printIcon(itemSpec)}</span> */}\n-                <span className='DisplayItemName' style={{marginRight: '5px'}}>{itemSpec['name']}</span>\n+                <span className='DisplayItemName' style={{marginRight: '5px'}}>\n+                    {itemSpec['name']}\n+                </span>\n                 <span className='DisplayItemPrice' style={\n                     {\n                         width: '100%',\n                         textAlign: 'right',\n"
                },
                {
                    "date": 1675997419615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,13 @@\n                 }>\n                     {displayItemPrice(itemSpec)}\n                 </span>\n             </div>\n-            <Popper open={open} anchorEl={anchorEl} onClose={handlePopoverClose} style={{maxWidth: '550px', fontSize: 'small'}}>\n+            <Popper\n+                open={open}\n+                anchorEl={anchorEl}\n+                onClose={handlePopoverClose}\n+                style={{maxWidth: '550px', fontSize: 'small'}}>\n                 <Box sx={{border: 1, p: 1, bgcolor: 'background.paper'}}>\n                     <PopperContents\n                         style={{overflow: 'hidden'}} itemSpec={itemSpec} />\n                 </Box>\n"
                },
                {
                    "date": 1675997437623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,9 @@\n     );\n }\n export default ItemCard;\n \n+// eslint-disable-next-line require-jsdoc\n function PopperContents({itemSpec}) {\n     const r = [];\n     function displayWholePrices(itemSpec) {\n         const priceLst = [];\n"
                },
                {
                    "date": 1675997444659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n \n // eslint-disable-next-line require-jsdoc\n function PopperContents({itemSpec}) {\n     const r = [];\n+    // eslint-disable-next-line require-jsdoc\n     function displayWholePrices(itemSpec) {\n         const priceLst = [];\n         for (let i = 0; i <= 3; i++) {\n             try {\n"
                },
                {
                    "date": 1675997460139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import Box from '@mui/material/Box';\n import Popper from '@mui/material/Popper';\n import {useState} from 'react';\n \n-// eslint-disable-next-line require-jsdoc\n function ItemCard({itemSpec, id}) {\n     const [anchorEl, setAnchorEl] = useState(null);\n \n     const handlePopoverOpen = (event) => {\n@@ -68,12 +67,12 @@\n     );\n }\n export default ItemCard;\n \n-// eslint-disable-next-line require-jsdoc\n+\n function PopperContents({itemSpec}) {\n     const r = [];\n-    // eslint-disable-next-line require-jsdoc\n+\n     function displayWholePrices(itemSpec) {\n         const priceLst = [];\n         for (let i = 0; i <= 3; i++) {\n             try {\n"
                },
                {
                    "date": 1675997523938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,12 @@\n             }\n         }\n         return <div key=\"prices\">\n             {priceLst.map((price, idx) =>\n-                <div key={`${itemSpec['id']}_${idx}`}>{idx}회 거래 가능: <span className=\"DisplayItemPrice\">{price}</span></div>\n+                <div key={`${itemSpec['id']}_${idx}`}>\n+                    {idx}회 거래 가능:\n+                    <span className=\"DisplayItemPrice\">{price}</span>\n+                </div>\n             )}\n         </div>;\n     }\n \n"
                },
                {
                    "date": 1675997561292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,16 +91,20 @@\n         </div>;\n     }\n \n     r.push(printIcon(itemSpec));\n-    if (itemSpec['type'].split('-')[0] === 'avatar' || itemSpec['type'] === 'weapon' || itemSpec['type'] === 'instrument') {\n+    if (itemSpec['type'].split('-')[0] === 'avatar' ||\n+        itemSpec['type'] === 'weapon' ||\n+        itemSpec['type'] === 'instrument') {\n         r.push(<div key=\"targetClass\" style={{color: 'red'}}>\n             <span className=\"TargetClass\">{itemSpec['target'][0]}</span>\n             <span> 사용 가능</span>\n \n         </div>);\n         if (itemSpec['TradeCount'] === true) {\n-            const contents = <div key=\"prices\">{displayWholePrices(itemSpec)}</div>;\n+            const contents = <div key=\"prices\">\n+                {displayWholePrices(itemSpec)}\n+            </div>;\n             r.push(contents);\n         } else if (itemSpec['TradeCount'] === undefined) {\n             const contents = <div key=\"prices\">{'재고없음'}</div>;\n             r.push(contents);\n"
                },
                {
                    "date": 1675997629254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,11 +100,9 @@\n             <span> 사용 가능</span>\n \n         </div>);\n         if (itemSpec['TradeCount'] === true) {\n-            const contents = <div key=\"prices\">\n-                {displayWholePrices(itemSpec)}\n-            </div>;\n+            const contents = <div key=\"prices\">{displayWholePrices(itemSpec)}</div>;\n             r.push(contents);\n         } else if (itemSpec['TradeCount'] === undefined) {\n             const contents = <div key=\"prices\">{'재고없음'}</div>;\n             r.push(contents);\n"
                }
            ],
            "date": 1675991739859,
            "name": "Commit-0",
            "content": "import Box from '@mui/material/Box';\nimport Popper from '@mui/material/Popper';\nimport { useState } from 'react';\n\nfunction ItemCard({ itemSpec, id }) {\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handlePopoverOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n\n    const displayItemPrice = (itemSpec) => {\n        let r = 0\n        if (\"CurrentMinPrice\" in itemSpec) {\n            r = itemSpec[\"CurrentMinPrice\"];\n        }\n        else if (itemSpec[\"TradeCount\"] && \"CurrentMinPrice_3\" in\n            itemSpec) {\n            r = itemSpec[\"CurrentMinPrice_3\"];\n        } else if (itemSpec[\"TradeCount\"]) {\n            r = '*';\n        } else {\n            r = \"S/O\"\n        }\n\n        return r.toLocaleString(\"en-US\");\n    }\n    return (\n        <div className=\"ItemCard\" id={id}>\n            <div\n                aria-owns={open ? 'mouse-over-popover' : undefined}\n                aria-haspopup=\"true\"\n                onMouseEnter={handlePopoverOpen}\n                onMouseLeave={handlePopoverClose}\n            >\n                {/* <span className='ItemIcon'>{printIcon(itemSpec)}</span> */}\n                <span className='DisplayItemName' style={{ marginRight: '5px', }}>{itemSpec['name']}</span>\n                <span className='DisplayItemPrice' style={\n                    {\n                        width: \"100%\",\n                        textAlign: 'right',\n                        fontWeight: 'bold',\n                        color: 'rgb(150, 130, 0)',\n                    }\n                }>\n                    {displayItemPrice(itemSpec)}\n                </span>\n            </div>\n            <Popper open={open} anchorEl={anchorEl} onClose={handlePopoverClose} style={{maxWidth: \"550px\", fontSize:'small'}}>\n                <Box sx={{ border: 1, p: 1, bgcolor: 'background.paper' }}>\n                    <PopperContents \n     style={{ overflow: 'hidden'}} itemSpec={itemSpec} />\n                </Box>\n            </Popper>\n        </div>\n    )\n}\nexport default ItemCard\n\nfunction PopperContents({ itemSpec }) {\n    let r = []\n    function displayWholePrices(itemSpec) {\n        let priceLst = []\n        for (let i = 0; i <= 3; i++) {\n            try {\n                priceLst.push(itemSpec[`CurrentMinPrice_${i}`].toString())\n\n            } catch {\n                priceLst.push('S/O')\n            }\n        }\n        return <div key=\"prices\">\n            {priceLst.map((price, idx) =>\n                <div key={`${itemSpec['id']}_${idx}`}>{idx}회 거래 가능: <span className=\"DisplayItemPrice\">{price}</span></div>\n            )}\n        </div>\n    }\n\n    r.push(printIcon(itemSpec))\n    if (itemSpec['type'].split('-')[0] === 'avatar' || itemSpec['type'] === 'weapon' || itemSpec['type'] === 'instrument') {\n        r.push(<div key=\"targetClass\" style={{ color: 'red' }}>\n            <span className=\"TargetClass\">{itemSpec['target'][0]}</span>\n            <span> 사용 가능</span>\n\n        </div>)\n        if (itemSpec['TradeCount'] === true) {\n            let contents = <div key=\"prices\">{displayWholePrices(itemSpec)}</div>\n            r.push(contents)\n        } else if (itemSpec['TradeCount'] === undefined) {\n            let contents = <div key=\"prices\">{\"재고없음\"}</div>\n            r.push(contents)\n        } else {\n            let contents = <div key=\"prices\">{\"거래횟수 무제한\"}</div>\n            r.push(contents)\n        }\n    }else {\n        function stringifyTargetLst(target){\n            let r = \"\"\n            \n            if (target.length !== 0){\n                for (let className of target){\n                    \n                    r = r+className+\", \"\n                }\n                r = r.slice(0, -2) + ' 사용 가능';\n            }\n            return r\n        }\n        r.push(<div key=\"targetClass\" style={{ color: 'red' }}>\n            <span className=\"TargetClass\">{\n                stringifyTargetLst(itemSpec['target'])\n            }</span>\n\n        </div>)\n        \n        if (itemSpec['TradeCount'] !== undefined) {\n            let contents = <div key=\"prices\">{\"거래횟수 무제한\"}</div>\n            r.push(contents)\n        } else {\n            let contents = <div key=\"prices\">{\"재고없음\"}</div>\n            r.push(contents)\n        }\n    }\n    return r\n}\n\nconst printIcon = (itemSpec) => {\n    let backgroundImage = ''\n    if (itemSpec['grade']) {\n        switch (itemSpec['grade']) {\n            case default:\n            case '일반':\n                backgroundImage = \"linear-gradient(135deg, rgb(49, 49, 49), rgb(88, 88, 88))\"\n                break\n            case '고급':\n                backgroundImage = \"linear-gradient(135deg, rgb(17, 39, 57), rgb(17, 61, 93))\"\n                break\n            case '희귀':\n                backgroundImage = \"linear-gradient(135deg, rgb(17, 39, 57), rgb(17, 61, 93))\" \n                break\n            case '영웅':\n                backgroundImage = \"linear-gradient(135deg, rgb(46, 18, 60), rgb(72, 13, 93))\"\n                break\n            case '전설':\n                backgroundImage = \"linear-gradient(135deg, rgb(69, 43, 6), rgb(158, 95, 4))\"\n                break\n        }\n    }\n    let style = {\n        height: \"48px\",\n        width: \"48px\",\n        backgroundImage: backgroundImage,\n        border: 'solid',\n        borderWidth: '1px',\n    }\n\n    return <img key='itemImage' style={style} src={itemSpec['icon'] ? itemSpec['icon'] : '/image/noStock.png'} alt=\"no image\"/>\n    }"
        }
    ]
}