{
    "sourceFile": "apps/LAvatar_front/src/components/avatarpage/avatarpage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1675962497741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1675962929534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,13 @@\n-import {useEffect, useState} from 'react'\n+import {useRef, useEffect, useState} from 'react'\n import {useRecoilState} from \"recoil\";\n import PackageItemList from './packageitems/PackageItemList'\n-import {packageItems, selectedLeafItemIdState, selectedPackageIdState} from '../../stores/itemPackageStore.atom';\n import './avatarpage.css';\n import CustomSnackbar from './reactMaterial/snackBar'\n import axios from 'axios'\n import PackageList from './PackageList/PackageList'\n-import {useRef} from 'react';\n import KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\n+import {packageItems, selectedLeafItemIdState, selectedPackageIdState} from '../../stores/itemPackageStore.atom';\n \n   \n \n   \n"
                },
                {
                    "date": 1675962949553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,16 @@\n import {useRef, useEffect, useState} from 'react'\n import {useRecoilState} from \"recoil\";\n-import PackageItemList from './packageitems/PackageItemList'\n-import './avatarpage.css';\n-import CustomSnackbar from './reactMaterial/snackBar'\n import axios from 'axios'\n+\n import PackageList from './PackageList/PackageList'\n import KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\n import {packageItems, selectedLeafItemIdState, selectedPackageIdState} from '../../stores/itemPackageStore.atom';\n+import PackageItemList from './packageitems/PackageItemList'\n+import './avatarpage.css';\n+import CustomSnackbar from './reactMaterial/snackBar'\n \n+\n   \n \n   \n function Avatarpage(props) {\n"
                },
                {
                    "date": 1675962957306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,14 @@\n import {useRef, useEffect, useState} from 'react'\n import {useRecoilState} from \"recoil\";\n import axios from 'axios'\n-\n-import PackageList from './PackageList/PackageList'\n import KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\n import {packageItems, selectedLeafItemIdState, selectedPackageIdState} from '../../stores/itemPackageStore.atom';\n import PackageItemList from './packageitems/PackageItemList'\n import './avatarpage.css';\n import CustomSnackbar from './reactMaterial/snackBar'\n+import PackageList from './PackageList/PackageList'\n \n-\n   \n \n   \n function Avatarpage(props) {\n"
                },
                {
                    "date": 1675990020119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,8 @@\n import CustomSnackbar from './reactMaterial/snackBar'\n import PackageList from './PackageList/PackageList'\n \n   \n-\n-  \n function Avatarpage(props) {\n     \n     const [items, setItems] = useRecoilState(packageItems)\n     const [selectedPackageId, setSelectedPackageId_] = useRecoilState(selectedPackageIdState)\n"
                },
                {
                    "date": 1675990169690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n             setPopupVisible(true)\n             setSelectedPackageId_(null)\n         }\n     }\n-    const handlePackage = (event, newValue) => {\n+    const handlePackage =  (event, newValue) => {\n         if (newValue !== null) {\n             setSelectedPackageId(newValue)\n         }\n         \n"
                },
                {
                    "date": 1675998646804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,87 +1,84 @@\n-import {useRef, useEffect, useState} from 'react'\n-import {useRecoilState} from \"recoil\";\n-import axios from 'axios'\n+import {useRef, useEffect, useState} from 'react';\n+import {useRecoilState} from 'recoil';\n+import axios from 'axios';\n import KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\n import {packageItems, selectedLeafItemIdState, selectedPackageIdState} from '../../stores/itemPackageStore.atom';\n-import PackageItemList from './packageitems/PackageItemList'\n+import PackageItemList from './packageitems/PackageItemList';\n import './avatarpage.css';\n-import CustomSnackbar from './reactMaterial/snackBar'\n-import PackageList from './PackageList/PackageList'\n+import CustomSnackbar from './reactMaterial/snackBar';\n+import PackageList from './PackageList/PackageList';\n \n-  \n+\n function Avatarpage(props) {\n-    \n-    const [items, setItems] = useRecoilState(packageItems)\n-    const [selectedPackageId, setSelectedPackageId_] = useRecoilState(selectedPackageIdState)\n-    const [selectedLeafId, setSelectedLeafId] = useRecoilState(selectedLeafItemIdState)\n-    const [packages, setPackages] = useState(null)\n-    const [popupVisible, setPopupVisible] = useState(false) \n+    const [items, setItems] = useRecoilState(packageItems);\n+    const [selectedPackageId, setSelectedPackageId_] = useRecoilState(selectedPackageIdState);\n+    const [selectedLeafId, setSelectedLeafId] = useRecoilState(selectedLeafItemIdState);\n+    const [packages, setPackages] = useState(null);\n+    const [popupVisible, setPopupVisible] = useState(false);\n \n     const setSelectedPackageId = (selectedPackageId) => {\n-        setSelectedLeafId(null)\n-        setSelectedPackageId_(selectedPackageId)\n-          \n-        if (items[selectedPackageId] === undefined){\n-            setPopupVisible(true)\n-            setSelectedPackageId_(null)\n+        setSelectedLeafId(null);\n+        setSelectedPackageId_(selectedPackageId);\n+\n+        if (items[selectedPackageId] === undefined) {\n+            setPopupVisible(true);\n+            setSelectedPackageId_(null);\n         }\n-    }\n-    const handlePackage =  (event, newValue) => {\n+    };\n+    const handlePackage = (event, newValue) => {\n         if (newValue !== null) {\n-            setSelectedPackageId(newValue)\n+            setSelectedPackageId(newValue);\n         }\n-        \n-    }\n+    };\n     const getPackages = (items) => {\n-        console.log(items)\n-        let r = []\n-        for (let id in items){\n-            if(items[id]['type'].split('_')[0] === 'package'){\n-                r.push(items[id]['id'])\n+        console.log(items);\n+        let r = [];\n+        for (const id in items) {\n+            if (items[id]['type'].split('_')[0] === 'package') {\n+                r.push(items[id]['id']);\n             }\n         }\n-        r = r.reverse()\n-        return r\n-    }\n+        r = r.reverse();\n+        return r;\n+    };\n     useEffect(() => {\n-            const reqAPI = async () => {\n-                const resp = await axios.get('http://localhost:10501/packageDict')\n-                setItems(resp.data)\n-                setPackages(getPackages(resp.data))\n-            }\n-            reqAPI()\n-            \n-        }, []\n-    )\n+        const reqAPI = async () => {\n+            const resp = await axios.get('http://localhost:10501/packageDict');\n+            setItems(resp.data);\n+            setPackages(getPackages(resp.data));\n+        };\n+        reqAPI();\n+    }, []\n+    );\n \n     const ref = useRef(null);\n \n     useEffect(() => {\n-        if(!selectedPackageId){\n-            return\n+        if (!selectedPackageId) {\n+            return;\n         }\n         ref.current.scrollIntoView({\n             behavior: 'smooth'});\n     }, [selectedPackageId]);\n \n-    if (!items){\n-        return <>Loading..</>\n+    if (!items) {\n+        return <>Loading..</>;\n     }\n     return (\n-        \n+\n         <div className=\"AvatarPage\">\n             <PackageList packages={packages} handler={handlePackage}/>\n-            <div className=\"ItemDisplay\" ref={ref}> \n-                {popupVisible && <CustomSnackbar msg='No Data on this Package' severity='error' setVisibility={setPopupVisible}/>} \n+            <div className=\"ItemDisplay\" ref={ref}>\n+                {popupVisible && <CustomSnackbar msg='No Data on this Package' severity='error' setVisibility={setPopupVisible}/>}\n                 {items[selectedPackageId] !== undefined && <PackageItemList/>}\n             </div>\n             <KeyboardDoubleArrowUpIcon className=\"TopButton\" onClick={()=>{\n-                window.scrollTo({top:0, \n-                    behavior: 'smooth'})\n+                window.scrollTo({top: 0,\n+                    behavior: 'smooth'});\n             }}/>\n-        \n+\n         </div>\n-    )\n+    );\n }\n-export default Avatarpage\n+export default Avatarpage;\n \n"
                },
                {
                    "date": 1675998744727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n             setItems(resp.data);\n             setPackages(getPackages(resp.data));\n         };\n         reqAPI();\n-    }, []\n+    }, [items]\n     );\n \n     const ref = useRef(null);\n \n"
                },
                {
                    "date": 1675998769889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n             setItems(resp.data);\n             setPackages(getPackages(resp.data));\n         };\n         reqAPI();\n-    }, [items]\n+    }, [items, packages]\n     );\n \n     const ref = useRef(null);\n \n"
                },
                {
                    "date": 1675998793437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,12 @@\n \n \n function Avatarpage(props) {\n     const [items, setItems] = useRecoilState(packageItems);\n+    const [packages, setPackages] = useState(null);\n     const [selectedPackageId, setSelectedPackageId_] = useRecoilState(selectedPackageIdState);\n     const [selectedLeafId, setSelectedLeafId] = useRecoilState(selectedLeafItemIdState);\n-    const [packages, setPackages] = useState(null);\n+\n     const [popupVisible, setPopupVisible] = useState(false);\n \n     const setSelectedPackageId = (selectedPackageId) => {\n         setSelectedLeafId(null);\n"
                },
                {
                    "date": 1675998817738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,8 @@\n     const [items, setItems] = useRecoilState(packageItems);\n     const [packages, setPackages] = useState(null);\n     const [selectedPackageId, setSelectedPackageId_] = useRecoilState(selectedPackageIdState);\n     const [selectedLeafId, setSelectedLeafId] = useRecoilState(selectedLeafItemIdState);\n-\n     const [popupVisible, setPopupVisible] = useState(false);\n \n     const setSelectedPackageId = (selectedPackageId) => {\n         setSelectedLeafId(null);\n@@ -48,9 +47,9 @@\n             setItems(resp.data);\n             setPackages(getPackages(resp.data));\n         };\n         reqAPI();\n-    }, [items, packages]\n+    }, [setItems]\n     );\n \n     const ref = useRef(null);\n \n"
                }
            ],
            "date": 1675962497741,
            "name": "Commit-0",
            "content": "import {useEffect, useState} from 'react'\nimport {useRecoilState} from \"recoil\";\nimport PackageItemList from './packageitems/PackageItemList'\nimport {packageItems, selectedLeafItemIdState, selectedPackageIdState} from '../../stores/itemPackageStore.atom';\nimport './avatarpage.css';\nimport CustomSnackbar from './reactMaterial/snackBar'\nimport axios from 'axios'\nimport PackageList from './PackageList/PackageList'\nimport {useRef} from 'react';\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp';\n\n  \n\n  \nfunction Avatarpage(props) {\n    \n    const [items, setItems] = useRecoilState(packageItems)\n    const [selectedPackageId, setSelectedPackageId_] = useRecoilState(selectedPackageIdState)\n    const [selectedLeafId, setSelectedLeafId] = useRecoilState(selectedLeafItemIdState)\n    const [packages, setPackages] = useState(null)\n    const [popupVisible, setPopupVisible] = useState(false) \n\n    const setSelectedPackageId = (selectedPackageId) => {\n        setSelectedLeafId(null)\n        setSelectedPackageId_(selectedPackageId)\n          \n        if (items[selectedPackageId] === undefined){\n            setPopupVisible(true)\n            setSelectedPackageId_(null)\n        }\n    }\n    const handlePackage = (event, newValue) => {\n        if (newValue !== null) {\n            setSelectedPackageId(newValue)\n        }\n        \n    }\n    const getPackages = (items) => {\n        console.log(items)\n        let r = []\n        for (let id in items){\n            if(items[id]['type'].split('_')[0] === 'package'){\n                r.push(items[id]['id'])\n            }\n        }\n        r = r.reverse()\n        return r\n    }\n    useEffect(() => {\n            const reqAPI = async () => {\n                const resp = await axios.get('http://localhost:10501/packageDict')\n                setItems(resp.data)\n                setPackages(getPackages(resp.data))\n            }\n            reqAPI()\n            \n        }, []\n    )\n\n    const ref = useRef(null);\n\n    useEffect(() => {\n        if(!selectedPackageId){\n            return\n        }\n        ref.current.scrollIntoView({\n            behavior: 'smooth'});\n    }, [selectedPackageId]);\n\n    if (!items){\n        return <>Loading..</>\n    }\n    return (\n        \n        <div className=\"AvatarPage\">\n            <PackageList packages={packages} handler={handlePackage}/>\n            <div className=\"ItemDisplay\" ref={ref}> \n                {popupVisible && <CustomSnackbar msg='No Data on this Package' severity='error' setVisibility={setPopupVisible}/>} \n                {items[selectedPackageId] !== undefined && <PackageItemList/>}\n            </div>\n            <KeyboardDoubleArrowUpIcon className=\"TopButton\" onClick={()=>{\n                window.scrollTo({top:0, \n                    behavior: 'smooth'})\n            }}/>\n        \n        </div>\n    )\n}\nexport default Avatarpage\n\n"
        }
    ]
}